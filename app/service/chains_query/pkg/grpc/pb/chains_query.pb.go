// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chains_query.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BitcoincoreBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BitcoincoreBlockRequest) Reset()         { *m = BitcoincoreBlockRequest{} }
func (m *BitcoincoreBlockRequest) String() string { return proto.CompactTextString(m) }
func (*BitcoincoreBlockRequest) ProtoMessage()    {}
func (*BitcoincoreBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{0}
}
func (m *BitcoincoreBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitcoincoreBlockRequest.Unmarshal(m, b)
}
func (m *BitcoincoreBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitcoincoreBlockRequest.Marshal(b, m, deterministic)
}
func (dst *BitcoincoreBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitcoincoreBlockRequest.Merge(dst, src)
}
func (m *BitcoincoreBlockRequest) XXX_Size() int {
	return xxx_messageInfo_BitcoincoreBlockRequest.Size(m)
}
func (m *BitcoincoreBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BitcoincoreBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BitcoincoreBlockRequest proto.InternalMessageInfo

type BitcoincoreBlockReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BitcoincoreBlockReply) Reset()         { *m = BitcoincoreBlockReply{} }
func (m *BitcoincoreBlockReply) String() string { return proto.CompactTextString(m) }
func (*BitcoincoreBlockReply) ProtoMessage()    {}
func (*BitcoincoreBlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{1}
}
func (m *BitcoincoreBlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitcoincoreBlockReply.Unmarshal(m, b)
}
func (m *BitcoincoreBlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitcoincoreBlockReply.Marshal(b, m, deterministic)
}
func (dst *BitcoincoreBlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitcoincoreBlockReply.Merge(dst, src)
}
func (m *BitcoincoreBlockReply) XXX_Size() int {
	return xxx_messageInfo_BitcoincoreBlockReply.Size(m)
}
func (m *BitcoincoreBlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BitcoincoreBlockReply.DiscardUnknown(m)
}

var xxx_messageInfo_BitcoincoreBlockReply proto.InternalMessageInfo

type QueryOmniPropertyRequest struct {
	Propertyid           int64    `protobuf:"varint,1,opt,name=propertyid" json:"propertyid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryOmniPropertyRequest) Reset()         { *m = QueryOmniPropertyRequest{} }
func (m *QueryOmniPropertyRequest) String() string { return proto.CompactTextString(m) }
func (*QueryOmniPropertyRequest) ProtoMessage()    {}
func (*QueryOmniPropertyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{2}
}
func (m *QueryOmniPropertyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryOmniPropertyRequest.Unmarshal(m, b)
}
func (m *QueryOmniPropertyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryOmniPropertyRequest.Marshal(b, m, deterministic)
}
func (dst *QueryOmniPropertyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOmniPropertyRequest.Merge(dst, src)
}
func (m *QueryOmniPropertyRequest) XXX_Size() int {
	return xxx_messageInfo_QueryOmniPropertyRequest.Size(m)
}
func (m *QueryOmniPropertyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOmniPropertyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOmniPropertyRequest proto.InternalMessageInfo

func (m *QueryOmniPropertyRequest) GetPropertyid() int64 {
	if m != nil {
		return m.Propertyid
	}
	return 0
}

type OmniProperty struct {
	Propertyid           int64    `protobuf:"varint,1,opt,name=Propertyid" json:"Propertyid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Category             string   `protobuf:"bytes,3,opt,name=Category" json:"Category,omitempty"`
	Subcategory          string   `protobuf:"bytes,4,opt,name=Subcategory" json:"Subcategory,omitempty"`
	URL                  string   `protobuf:"bytes,5,opt,name=URL" json:"URL,omitempty"`
	Divisible            bool     `protobuf:"varint,6,opt,name=Divisible" json:"Divisible,omitempty"`
	Issuer               string   `protobuf:"bytes,7,opt,name=Issuer" json:"Issuer,omitempty"`
	Creationtxid         string   `protobuf:"bytes,8,opt,name=Creationtxid" json:"Creationtxid,omitempty"`
	Fixedissuance        bool     `protobuf:"varint,9,opt,name=Fixedissuance" json:"Fixedissuance,omitempty"`
	Managedissuance      bool     `protobuf:"varint,10,opt,name=Managedissuance" json:"Managedissuance,omitempty"`
	Freezingenabled      bool     `protobuf:"varint,11,opt,name=Freezingenabled" json:"Freezingenabled,omitempty"`
	Totaltokens          string   `protobuf:"bytes,12,opt,name=Totaltokens" json:"Totaltokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OmniProperty) Reset()         { *m = OmniProperty{} }
func (m *OmniProperty) String() string { return proto.CompactTextString(m) }
func (*OmniProperty) ProtoMessage()    {}
func (*OmniProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{3}
}
func (m *OmniProperty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OmniProperty.Unmarshal(m, b)
}
func (m *OmniProperty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OmniProperty.Marshal(b, m, deterministic)
}
func (dst *OmniProperty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OmniProperty.Merge(dst, src)
}
func (m *OmniProperty) XXX_Size() int {
	return xxx_messageInfo_OmniProperty.Size(m)
}
func (m *OmniProperty) XXX_DiscardUnknown() {
	xxx_messageInfo_OmniProperty.DiscardUnknown(m)
}

var xxx_messageInfo_OmniProperty proto.InternalMessageInfo

func (m *OmniProperty) GetPropertyid() int64 {
	if m != nil {
		return m.Propertyid
	}
	return 0
}

func (m *OmniProperty) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OmniProperty) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *OmniProperty) GetSubcategory() string {
	if m != nil {
		return m.Subcategory
	}
	return ""
}

func (m *OmniProperty) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *OmniProperty) GetDivisible() bool {
	if m != nil {
		return m.Divisible
	}
	return false
}

func (m *OmniProperty) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *OmniProperty) GetCreationtxid() string {
	if m != nil {
		return m.Creationtxid
	}
	return ""
}

func (m *OmniProperty) GetFixedissuance() bool {
	if m != nil {
		return m.Fixedissuance
	}
	return false
}

func (m *OmniProperty) GetManagedissuance() bool {
	if m != nil {
		return m.Managedissuance
	}
	return false
}

func (m *OmniProperty) GetFreezingenabled() bool {
	if m != nil {
		return m.Freezingenabled
	}
	return false
}

func (m *OmniProperty) GetTotaltokens() string {
	if m != nil {
		return m.Totaltokens
	}
	return ""
}

type QueryOmniPropertyReply struct {
	OmniProperty         *OmniProperty `protobuf:"bytes,1,opt,name=OmniProperty" json:"OmniProperty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueryOmniPropertyReply) Reset()         { *m = QueryOmniPropertyReply{} }
func (m *QueryOmniPropertyReply) String() string { return proto.CompactTextString(m) }
func (*QueryOmniPropertyReply) ProtoMessage()    {}
func (*QueryOmniPropertyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{4}
}
func (m *QueryOmniPropertyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryOmniPropertyReply.Unmarshal(m, b)
}
func (m *QueryOmniPropertyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryOmniPropertyReply.Marshal(b, m, deterministic)
}
func (dst *QueryOmniPropertyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOmniPropertyReply.Merge(dst, src)
}
func (m *QueryOmniPropertyReply) XXX_Size() int {
	return xxx_messageInfo_QueryOmniPropertyReply.Size(m)
}
func (m *QueryOmniPropertyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOmniPropertyReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOmniPropertyReply proto.InternalMessageInfo

func (m *QueryOmniPropertyReply) GetOmniProperty() *OmniProperty {
	if m != nil {
		return m.OmniProperty
	}
	return nil
}

type ERC20TokenInfoRequest struct {
	TokenHex             string   `protobuf:"bytes,1,opt,name=TokenHex" json:"TokenHex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ERC20TokenInfoRequest) Reset()         { *m = ERC20TokenInfoRequest{} }
func (m *ERC20TokenInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ERC20TokenInfoRequest) ProtoMessage()    {}
func (*ERC20TokenInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{5}
}
func (m *ERC20TokenInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ERC20TokenInfoRequest.Unmarshal(m, b)
}
func (m *ERC20TokenInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ERC20TokenInfoRequest.Marshal(b, m, deterministic)
}
func (dst *ERC20TokenInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ERC20TokenInfoRequest.Merge(dst, src)
}
func (m *ERC20TokenInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ERC20TokenInfoRequest.Size(m)
}
func (m *ERC20TokenInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ERC20TokenInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ERC20TokenInfoRequest proto.InternalMessageInfo

func (m *ERC20TokenInfoRequest) GetTokenHex() string {
	if m != nil {
		return m.TokenHex
	}
	return ""
}

type ERC20Token struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=Symbol" json:"Symbol,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Decimals             uint64   `protobuf:"varint,3,opt,name=Decimals" json:"Decimals,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=Address" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ERC20Token) Reset()         { *m = ERC20Token{} }
func (m *ERC20Token) String() string { return proto.CompactTextString(m) }
func (*ERC20Token) ProtoMessage()    {}
func (*ERC20Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{6}
}
func (m *ERC20Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ERC20Token.Unmarshal(m, b)
}
func (m *ERC20Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ERC20Token.Marshal(b, m, deterministic)
}
func (dst *ERC20Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ERC20Token.Merge(dst, src)
}
func (m *ERC20Token) XXX_Size() int {
	return xxx_messageInfo_ERC20Token.Size(m)
}
func (m *ERC20Token) XXX_DiscardUnknown() {
	xxx_messageInfo_ERC20Token.DiscardUnknown(m)
}

var xxx_messageInfo_ERC20Token proto.InternalMessageInfo

func (m *ERC20Token) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ERC20Token) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ERC20Token) GetDecimals() uint64 {
	if m != nil {
		return m.Decimals
	}
	return 0
}

func (m *ERC20Token) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ERC20TokenInfoReply struct {
	ERC20Token           *ERC20Token `protobuf:"bytes,1,opt,name=ERC20Token" json:"ERC20Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ERC20TokenInfoReply) Reset()         { *m = ERC20TokenInfoReply{} }
func (m *ERC20TokenInfoReply) String() string { return proto.CompactTextString(m) }
func (*ERC20TokenInfoReply) ProtoMessage()    {}
func (*ERC20TokenInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{7}
}
func (m *ERC20TokenInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ERC20TokenInfoReply.Unmarshal(m, b)
}
func (m *ERC20TokenInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ERC20TokenInfoReply.Marshal(b, m, deterministic)
}
func (dst *ERC20TokenInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ERC20TokenInfoReply.Merge(dst, src)
}
func (m *ERC20TokenInfoReply) XXX_Size() int {
	return xxx_messageInfo_ERC20TokenInfoReply.Size(m)
}
func (m *ERC20TokenInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ERC20TokenInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_ERC20TokenInfoReply proto.InternalMessageInfo

func (m *ERC20TokenInfoReply) GetERC20Token() *ERC20Token {
	if m != nil {
		return m.ERC20Token
	}
	return nil
}

type ConstructTxBTCRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=From" json:"From,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=To" json:"To,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=Amount" json:"Amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConstructTxBTCRequest) Reset()         { *m = ConstructTxBTCRequest{} }
func (m *ConstructTxBTCRequest) String() string { return proto.CompactTextString(m) }
func (*ConstructTxBTCRequest) ProtoMessage()    {}
func (*ConstructTxBTCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{8}
}
func (m *ConstructTxBTCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConstructTxBTCRequest.Unmarshal(m, b)
}
func (m *ConstructTxBTCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConstructTxBTCRequest.Marshal(b, m, deterministic)
}
func (dst *ConstructTxBTCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstructTxBTCRequest.Merge(dst, src)
}
func (m *ConstructTxBTCRequest) XXX_Size() int {
	return xxx_messageInfo_ConstructTxBTCRequest.Size(m)
}
func (m *ConstructTxBTCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstructTxBTCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConstructTxBTCRequest proto.InternalMessageInfo

func (m *ConstructTxBTCRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ConstructTxBTCRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ConstructTxBTCRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type ConstructTxBTCReply struct {
	UnsignedTxHex        string   `protobuf:"bytes,1,opt,name=UnsignedTxHex" json:"UnsignedTxHex,omitempty"`
	VinAmount            int64    `protobuf:"varint,2,opt,name=VinAmount" json:"VinAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConstructTxBTCReply) Reset()         { *m = ConstructTxBTCReply{} }
func (m *ConstructTxBTCReply) String() string { return proto.CompactTextString(m) }
func (*ConstructTxBTCReply) ProtoMessage()    {}
func (*ConstructTxBTCReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{9}
}
func (m *ConstructTxBTCReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConstructTxBTCReply.Unmarshal(m, b)
}
func (m *ConstructTxBTCReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConstructTxBTCReply.Marshal(b, m, deterministic)
}
func (dst *ConstructTxBTCReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstructTxBTCReply.Merge(dst, src)
}
func (m *ConstructTxBTCReply) XXX_Size() int {
	return xxx_messageInfo_ConstructTxBTCReply.Size(m)
}
func (m *ConstructTxBTCReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstructTxBTCReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConstructTxBTCReply proto.InternalMessageInfo

func (m *ConstructTxBTCReply) GetUnsignedTxHex() string {
	if m != nil {
		return m.UnsignedTxHex
	}
	return ""
}

func (m *ConstructTxBTCReply) GetVinAmount() int64 {
	if m != nil {
		return m.VinAmount
	}
	return 0
}

type SendBTCTxRequest struct {
	SignedTxHex          string   `protobuf:"bytes,1,opt,name=SignedTxHex" json:"SignedTxHex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendBTCTxRequest) Reset()         { *m = SendBTCTxRequest{} }
func (m *SendBTCTxRequest) String() string { return proto.CompactTextString(m) }
func (*SendBTCTxRequest) ProtoMessage()    {}
func (*SendBTCTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{10}
}
func (m *SendBTCTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendBTCTxRequest.Unmarshal(m, b)
}
func (m *SendBTCTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendBTCTxRequest.Marshal(b, m, deterministic)
}
func (dst *SendBTCTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendBTCTxRequest.Merge(dst, src)
}
func (m *SendBTCTxRequest) XXX_Size() int {
	return xxx_messageInfo_SendBTCTxRequest.Size(m)
}
func (m *SendBTCTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendBTCTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendBTCTxRequest proto.InternalMessageInfo

func (m *SendBTCTxRequest) GetSignedTxHex() string {
	if m != nil {
		return m.SignedTxHex
	}
	return ""
}

type SendBTCTxReply struct {
	TxID                 string   `protobuf:"bytes,1,opt,name=TxID" json:"TxID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendBTCTxReply) Reset()         { *m = SendBTCTxReply{} }
func (m *SendBTCTxReply) String() string { return proto.CompactTextString(m) }
func (*SendBTCTxReply) ProtoMessage()    {}
func (*SendBTCTxReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{11}
}
func (m *SendBTCTxReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendBTCTxReply.Unmarshal(m, b)
}
func (m *SendBTCTxReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendBTCTxReply.Marshal(b, m, deterministic)
}
func (dst *SendBTCTxReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendBTCTxReply.Merge(dst, src)
}
func (m *SendBTCTxReply) XXX_Size() int {
	return xxx_messageInfo_SendBTCTxReply.Size(m)
}
func (m *SendBTCTxReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendBTCTxReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendBTCTxReply proto.InternalMessageInfo

func (m *SendBTCTxReply) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

type QueryBalanceRequest struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryBalanceRequest) Reset()         { *m = QueryBalanceRequest{} }
func (m *QueryBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*QueryBalanceRequest) ProtoMessage()    {}
func (*QueryBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{12}
}
func (m *QueryBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBalanceRequest.Unmarshal(m, b)
}
func (m *QueryBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBalanceRequest.Marshal(b, m, deterministic)
}
func (dst *QueryBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBalanceRequest.Merge(dst, src)
}
func (m *QueryBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_QueryBalanceRequest.Size(m)
}
func (m *QueryBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBalanceRequest proto.InternalMessageInfo

func (m *QueryBalanceRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *QueryBalanceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type QueryBalanceReply struct {
	Balance              string   `protobuf:"bytes,1,opt,name=balance" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryBalanceReply) Reset()         { *m = QueryBalanceReply{} }
func (m *QueryBalanceReply) String() string { return proto.CompactTextString(m) }
func (*QueryBalanceReply) ProtoMessage()    {}
func (*QueryBalanceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{13}
}
func (m *QueryBalanceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBalanceReply.Unmarshal(m, b)
}
func (m *QueryBalanceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBalanceReply.Marshal(b, m, deterministic)
}
func (dst *QueryBalanceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBalanceReply.Merge(dst, src)
}
func (m *QueryBalanceReply) XXX_Size() int {
	return xxx_messageInfo_QueryBalanceReply.Size(m)
}
func (m *QueryBalanceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBalanceReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBalanceReply proto.InternalMessageInfo

func (m *QueryBalanceReply) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

type WalletValidateRequest struct {
	ChainName            string   `protobuf:"bytes,1,opt,name=chainName" json:"chainName,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletValidateRequest) Reset()         { *m = WalletValidateRequest{} }
func (m *WalletValidateRequest) String() string { return proto.CompactTextString(m) }
func (*WalletValidateRequest) ProtoMessage()    {}
func (*WalletValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{14}
}
func (m *WalletValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletValidateRequest.Unmarshal(m, b)
}
func (m *WalletValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletValidateRequest.Marshal(b, m, deterministic)
}
func (dst *WalletValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletValidateRequest.Merge(dst, src)
}
func (m *WalletValidateRequest) XXX_Size() int {
	return xxx_messageInfo_WalletValidateRequest.Size(m)
}
func (m *WalletValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WalletValidateRequest proto.InternalMessageInfo

func (m *WalletValidateRequest) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *WalletValidateRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type WalletValidateReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletValidateReply) Reset()         { *m = WalletValidateReply{} }
func (m *WalletValidateReply) String() string { return proto.CompactTextString(m) }
func (*WalletValidateReply) ProtoMessage()    {}
func (*WalletValidateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{15}
}
func (m *WalletValidateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletValidateReply.Unmarshal(m, b)
}
func (m *WalletValidateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletValidateReply.Marshal(b, m, deterministic)
}
func (dst *WalletValidateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletValidateReply.Merge(dst, src)
}
func (m *WalletValidateReply) XXX_Size() int {
	return xxx_messageInfo_WalletValidateReply.Size(m)
}
func (m *WalletValidateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletValidateReply.DiscardUnknown(m)
}

var xxx_messageInfo_WalletValidateReply proto.InternalMessageInfo

type ConstructTxETHRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=From" json:"From,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=To" json:"To,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=Amount" json:"Amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConstructTxETHRequest) Reset()         { *m = ConstructTxETHRequest{} }
func (m *ConstructTxETHRequest) String() string { return proto.CompactTextString(m) }
func (*ConstructTxETHRequest) ProtoMessage()    {}
func (*ConstructTxETHRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{16}
}
func (m *ConstructTxETHRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConstructTxETHRequest.Unmarshal(m, b)
}
func (m *ConstructTxETHRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConstructTxETHRequest.Marshal(b, m, deterministic)
}
func (dst *ConstructTxETHRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstructTxETHRequest.Merge(dst, src)
}
func (m *ConstructTxETHRequest) XXX_Size() int {
	return xxx_messageInfo_ConstructTxETHRequest.Size(m)
}
func (m *ConstructTxETHRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstructTxETHRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConstructTxETHRequest proto.InternalMessageInfo

func (m *ConstructTxETHRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ConstructTxETHRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ConstructTxETHRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type ConstructTxETHReply struct {
	UnsignedTxHex        string   `protobuf:"bytes,1,opt,name=UnsignedTxHex" json:"UnsignedTxHex,omitempty"`
	ChainID              string   `protobuf:"bytes,2,opt,name=ChainID" json:"ChainID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConstructTxETHReply) Reset()         { *m = ConstructTxETHReply{} }
func (m *ConstructTxETHReply) String() string { return proto.CompactTextString(m) }
func (*ConstructTxETHReply) ProtoMessage()    {}
func (*ConstructTxETHReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_chains_query_22f06b8f66ddf476, []int{17}
}
func (m *ConstructTxETHReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConstructTxETHReply.Unmarshal(m, b)
}
func (m *ConstructTxETHReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConstructTxETHReply.Marshal(b, m, deterministic)
}
func (dst *ConstructTxETHReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstructTxETHReply.Merge(dst, src)
}
func (m *ConstructTxETHReply) XXX_Size() int {
	return xxx_messageInfo_ConstructTxETHReply.Size(m)
}
func (m *ConstructTxETHReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstructTxETHReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConstructTxETHReply proto.InternalMessageInfo

func (m *ConstructTxETHReply) GetUnsignedTxHex() string {
	if m != nil {
		return m.UnsignedTxHex
	}
	return ""
}

func (m *ConstructTxETHReply) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func init() {
	proto.RegisterType((*BitcoincoreBlockRequest)(nil), "pb.BitcoincoreBlockRequest")
	proto.RegisterType((*BitcoincoreBlockReply)(nil), "pb.BitcoincoreBlockReply")
	proto.RegisterType((*QueryOmniPropertyRequest)(nil), "pb.QueryOmniPropertyRequest")
	proto.RegisterType((*OmniProperty)(nil), "pb.OmniProperty")
	proto.RegisterType((*QueryOmniPropertyReply)(nil), "pb.QueryOmniPropertyReply")
	proto.RegisterType((*ERC20TokenInfoRequest)(nil), "pb.ERC20TokenInfoRequest")
	proto.RegisterType((*ERC20Token)(nil), "pb.ERC20Token")
	proto.RegisterType((*ERC20TokenInfoReply)(nil), "pb.ERC20TokenInfoReply")
	proto.RegisterType((*ConstructTxBTCRequest)(nil), "pb.ConstructTxBTCRequest")
	proto.RegisterType((*ConstructTxBTCReply)(nil), "pb.ConstructTxBTCReply")
	proto.RegisterType((*SendBTCTxRequest)(nil), "pb.SendBTCTxRequest")
	proto.RegisterType((*SendBTCTxReply)(nil), "pb.SendBTCTxReply")
	proto.RegisterType((*QueryBalanceRequest)(nil), "pb.QueryBalanceRequest")
	proto.RegisterType((*QueryBalanceReply)(nil), "pb.QueryBalanceReply")
	proto.RegisterType((*WalletValidateRequest)(nil), "pb.WalletValidateRequest")
	proto.RegisterType((*WalletValidateReply)(nil), "pb.WalletValidateReply")
	proto.RegisterType((*ConstructTxETHRequest)(nil), "pb.ConstructTxETHRequest")
	proto.RegisterType((*ConstructTxETHReply)(nil), "pb.ConstructTxETHReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChainsQueryClient is the client API for ChainsQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChainsQueryClient interface {
	BitcoincoreBlock(ctx context.Context, in *BitcoincoreBlockRequest, opts ...grpc.CallOption) (*BitcoincoreBlockReply, error)
	QueryOmniProperty(ctx context.Context, in *QueryOmniPropertyRequest, opts ...grpc.CallOption) (*QueryOmniPropertyReply, error)
	ERC20TokenInfo(ctx context.Context, in *ERC20TokenInfoRequest, opts ...grpc.CallOption) (*ERC20TokenInfoReply, error)
	ConstructTxBTC(ctx context.Context, in *ConstructTxBTCRequest, opts ...grpc.CallOption) (*ConstructTxBTCReply, error)
	SendBTCTx(ctx context.Context, in *SendBTCTxRequest, opts ...grpc.CallOption) (*SendBTCTxReply, error)
	QueryBalance(ctx context.Context, in *QueryBalanceRequest, opts ...grpc.CallOption) (*QueryBalanceReply, error)
	WalletValidate(ctx context.Context, in *WalletValidateRequest, opts ...grpc.CallOption) (*WalletValidateReply, error)
	ConstructTxETH(ctx context.Context, in *ConstructTxETHRequest, opts ...grpc.CallOption) (*ConstructTxETHReply, error)
}

type chainsQueryClient struct {
	cc *grpc.ClientConn
}

func NewChainsQueryClient(cc *grpc.ClientConn) ChainsQueryClient {
	return &chainsQueryClient{cc}
}

func (c *chainsQueryClient) BitcoincoreBlock(ctx context.Context, in *BitcoincoreBlockRequest, opts ...grpc.CallOption) (*BitcoincoreBlockReply, error) {
	out := new(BitcoincoreBlockReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/BitcoincoreBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainsQueryClient) QueryOmniProperty(ctx context.Context, in *QueryOmniPropertyRequest, opts ...grpc.CallOption) (*QueryOmniPropertyReply, error) {
	out := new(QueryOmniPropertyReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/QueryOmniProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainsQueryClient) ERC20TokenInfo(ctx context.Context, in *ERC20TokenInfoRequest, opts ...grpc.CallOption) (*ERC20TokenInfoReply, error) {
	out := new(ERC20TokenInfoReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/ERC20TokenInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainsQueryClient) ConstructTxBTC(ctx context.Context, in *ConstructTxBTCRequest, opts ...grpc.CallOption) (*ConstructTxBTCReply, error) {
	out := new(ConstructTxBTCReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/ConstructTxBTC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainsQueryClient) SendBTCTx(ctx context.Context, in *SendBTCTxRequest, opts ...grpc.CallOption) (*SendBTCTxReply, error) {
	out := new(SendBTCTxReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/SendBTCTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainsQueryClient) QueryBalance(ctx context.Context, in *QueryBalanceRequest, opts ...grpc.CallOption) (*QueryBalanceReply, error) {
	out := new(QueryBalanceReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/QueryBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainsQueryClient) WalletValidate(ctx context.Context, in *WalletValidateRequest, opts ...grpc.CallOption) (*WalletValidateReply, error) {
	out := new(WalletValidateReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/WalletValidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chainsQueryClient) ConstructTxETH(ctx context.Context, in *ConstructTxETHRequest, opts ...grpc.CallOption) (*ConstructTxETHReply, error) {
	out := new(ConstructTxETHReply)
	err := c.cc.Invoke(ctx, "/pb.ChainsQuery/ConstructTxETH", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChainsQueryServer is the server API for ChainsQuery service.
type ChainsQueryServer interface {
	BitcoincoreBlock(context.Context, *BitcoincoreBlockRequest) (*BitcoincoreBlockReply, error)
	QueryOmniProperty(context.Context, *QueryOmniPropertyRequest) (*QueryOmniPropertyReply, error)
	ERC20TokenInfo(context.Context, *ERC20TokenInfoRequest) (*ERC20TokenInfoReply, error)
	ConstructTxBTC(context.Context, *ConstructTxBTCRequest) (*ConstructTxBTCReply, error)
	SendBTCTx(context.Context, *SendBTCTxRequest) (*SendBTCTxReply, error)
	QueryBalance(context.Context, *QueryBalanceRequest) (*QueryBalanceReply, error)
	WalletValidate(context.Context, *WalletValidateRequest) (*WalletValidateReply, error)
	ConstructTxETH(context.Context, *ConstructTxETHRequest) (*ConstructTxETHReply, error)
}

func RegisterChainsQueryServer(s *grpc.Server, srv ChainsQueryServer) {
	s.RegisterService(&_ChainsQuery_serviceDesc, srv)
}

func _ChainsQuery_BitcoincoreBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BitcoincoreBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).BitcoincoreBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/BitcoincoreBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).BitcoincoreBlock(ctx, req.(*BitcoincoreBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainsQuery_QueryOmniProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryOmniPropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).QueryOmniProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/QueryOmniProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).QueryOmniProperty(ctx, req.(*QueryOmniPropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainsQuery_ERC20TokenInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ERC20TokenInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).ERC20TokenInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/ERC20TokenInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).ERC20TokenInfo(ctx, req.(*ERC20TokenInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainsQuery_ConstructTxBTC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConstructTxBTCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).ConstructTxBTC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/ConstructTxBTC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).ConstructTxBTC(ctx, req.(*ConstructTxBTCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainsQuery_SendBTCTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendBTCTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).SendBTCTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/SendBTCTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).SendBTCTx(ctx, req.(*SendBTCTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainsQuery_QueryBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).QueryBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/QueryBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).QueryBalance(ctx, req.(*QueryBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainsQuery_WalletValidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).WalletValidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/WalletValidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).WalletValidate(ctx, req.(*WalletValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChainsQuery_ConstructTxETH_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConstructTxETHRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChainsQueryServer).ConstructTxETH(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChainsQuery/ConstructTxETH",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChainsQueryServer).ConstructTxETH(ctx, req.(*ConstructTxETHRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChainsQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ChainsQuery",
	HandlerType: (*ChainsQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BitcoincoreBlock",
			Handler:    _ChainsQuery_BitcoincoreBlock_Handler,
		},
		{
			MethodName: "QueryOmniProperty",
			Handler:    _ChainsQuery_QueryOmniProperty_Handler,
		},
		{
			MethodName: "ERC20TokenInfo",
			Handler:    _ChainsQuery_ERC20TokenInfo_Handler,
		},
		{
			MethodName: "ConstructTxBTC",
			Handler:    _ChainsQuery_ConstructTxBTC_Handler,
		},
		{
			MethodName: "SendBTCTx",
			Handler:    _ChainsQuery_SendBTCTx_Handler,
		},
		{
			MethodName: "QueryBalance",
			Handler:    _ChainsQuery_QueryBalance_Handler,
		},
		{
			MethodName: "WalletValidate",
			Handler:    _ChainsQuery_WalletValidate_Handler,
		},
		{
			MethodName: "ConstructTxETH",
			Handler:    _ChainsQuery_ConstructTxETH_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chains_query.proto",
}

func init() { proto.RegisterFile("chains_query.proto", fileDescriptor_chains_query_22f06b8f66ddf476) }

var fileDescriptor_chains_query_22f06b8f66ddf476 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4b, 0x8f, 0xeb, 0x34,
	0x14, 0x56, 0x1f, 0xf4, 0x71, 0xda, 0x5b, 0x8a, 0x4b, 0xa7, 0x99, 0x30, 0x42, 0x95, 0x35, 0x8b,
	0x6e, 0xa8, 0xd0, 0xdc, 0xcb, 0x86, 0x05, 0xd2, 0xed, 0x63, 0x98, 0x22, 0xe6, 0x41, 0x9a, 0x19,
	0xc4, 0x0a, 0xe5, 0x61, 0x8a, 0x35, 0xa9, 0xdd, 0x49, 0x52, 0xd4, 0xf2, 0x0b, 0xf8, 0x47, 0xfc,
	0x3d, 0x64, 0xc7, 0x69, 0xe2, 0xb4, 0x45, 0x2c, 0xd8, 0xf9, 0x7c, 0x3e, 0xe7, 0xcb, 0x79, 0x7c,
	0xc7, 0x2d, 0x20, 0xef, 0x77, 0x87, 0xb2, 0xe8, 0xd7, 0xb7, 0x2d, 0x09, 0xf7, 0xe3, 0x4d, 0xc8,
	0x63, 0x8e, 0xca, 0x1b, 0x17, 0x5f, 0xc2, 0x60, 0x42, 0x63, 0x8f, 0x53, 0xe6, 0xf1, 0x90, 0x4c,
	0x02, 0xee, 0xbd, 0x5a, 0xe4, 0x6d, 0x4b, 0xa2, 0x18, 0x0f, 0xa0, 0x7f, 0x7c, 0xb5, 0x09, 0xf6,
	0xf8, 0x5b, 0x30, 0x7e, 0x12, 0x34, 0x8f, 0x6b, 0x46, 0x9f, 0x42, 0xbe, 0x21, 0x61, 0xbc, 0x57,
	0x41, 0xe8, 0x4b, 0x80, 0x8d, 0x82, 0xa8, 0x6f, 0x94, 0x86, 0xa5, 0x51, 0xc5, 0xca, 0x21, 0xf8,
	0xaf, 0x0a, 0xb4, 0xf3, 0x71, 0x22, 0xe0, 0xe9, 0x28, 0x20, 0x43, 0x10, 0x82, 0xea, 0x83, 0xb3,
	0x26, 0x46, 0x79, 0x58, 0x1a, 0x35, 0x2d, 0x79, 0x46, 0x26, 0x34, 0xa6, 0x4e, 0x4c, 0x56, 0x3c,
	0xdc, 0x1b, 0x15, 0x89, 0x1f, 0x6c, 0x34, 0x84, 0xd6, 0x72, 0xeb, 0x7a, 0xe9, 0x75, 0x55, 0x5e,
	0xe7, 0x21, 0xd4, 0x85, 0xca, 0xb3, 0xf5, 0xa3, 0xf1, 0x89, 0xbc, 0x11, 0x47, 0x74, 0x05, 0xcd,
	0x19, 0xfd, 0x83, 0x46, 0xd4, 0x0d, 0x88, 0x51, 0x1b, 0x96, 0x46, 0x0d, 0x2b, 0x03, 0xd0, 0x05,
	0xd4, 0x16, 0x51, 0xb4, 0x25, 0xa1, 0x51, 0x97, 0x21, 0xca, 0x42, 0x18, 0xda, 0xd3, 0x90, 0x38,
	0x31, 0xe5, 0x2c, 0xde, 0x51, 0xdf, 0x68, 0xc8, 0x5b, 0x0d, 0x43, 0xd7, 0xf0, 0xee, 0x96, 0xee,
	0x88, 0x4f, 0xa3, 0x68, 0xeb, 0x30, 0x8f, 0x18, 0x4d, 0xc9, 0xae, 0x83, 0x68, 0x04, 0x9f, 0xde,
	0x3b, 0xcc, 0x59, 0xe5, 0xfc, 0x40, 0xfa, 0x15, 0x61, 0xe1, 0x79, 0x1b, 0x12, 0xf2, 0x27, 0x65,
	0x2b, 0xc2, 0x1c, 0x37, 0x20, 0xbe, 0xd1, 0x4a, 0x3c, 0x0b, 0xb0, 0xe8, 0x83, 0xcd, 0x63, 0x27,
	0x88, 0xf9, 0x2b, 0x61, 0x91, 0xd1, 0x4e, 0xfa, 0x90, 0x83, 0xf0, 0x03, 0x5c, 0x9c, 0x18, 0xe3,
	0x26, 0xd8, 0xa3, 0x0f, 0xfa, 0x8c, 0xe4, 0x54, 0x5a, 0x37, 0xdd, 0xf1, 0xc6, 0x1d, 0x6b, 0xce,
	0x9a, 0x17, 0x7e, 0x0f, 0xfd, 0xb9, 0x35, 0xbd, 0xf9, 0xda, 0x16, 0xf4, 0x0b, 0xf6, 0x1b, 0x4f,
	0x35, 0x61, 0x42, 0x43, 0x62, 0x77, 0x64, 0x27, 0xa9, 0x9a, 0xd6, 0xc1, 0xc6, 0x0c, 0x20, 0x0b,
	0x12, 0xad, 0x5e, 0xee, 0xd7, 0x2e, 0x0f, 0x94, 0x9f, 0xb2, 0xce, 0x89, 0x60, 0x46, 0x3c, 0xba,
	0x76, 0x82, 0x48, 0x8a, 0xa0, 0x6a, 0x1d, 0x6c, 0x64, 0x40, 0xfd, 0xa3, 0xef, 0x87, 0x24, 0x8a,
	0x94, 0x00, 0x52, 0x13, 0xcf, 0xa1, 0x57, 0x4c, 0x52, 0x54, 0x3c, 0xce, 0xa7, 0xa1, 0xea, 0xed,
	0x88, 0x7a, 0x33, 0xd4, 0xca, 0x79, 0xe0, 0x25, 0xf4, 0xa7, 0x9c, 0x45, 0x71, 0xb8, 0xf5, 0x62,
	0x7b, 0x37, 0xb1, 0xa7, 0x69, 0xad, 0x08, 0xaa, 0xb7, 0x21, 0x5f, 0xab, 0xfc, 0xe5, 0x19, 0x75,
	0xa0, 0x6c, 0x73, 0x95, 0x7b, 0xd9, 0xe6, 0xa2, 0xca, 0x8f, 0x6b, 0xbe, 0x65, 0xb1, 0x12, 0xaf,
	0xb2, 0xf0, 0x2f, 0xd0, 0x2b, 0x92, 0x8a, 0xdc, 0xae, 0xe1, 0xdd, 0x33, 0x8b, 0xe8, 0x8a, 0x11,
	0xdf, 0xde, 0x65, 0x3d, 0xd4, 0x41, 0xa1, 0xe1, 0x17, 0xca, 0x14, 0x6f, 0x59, 0xae, 0x51, 0x06,
	0xe0, 0x0f, 0xd0, 0x5d, 0x12, 0xe6, 0x4f, 0xec, 0xa9, 0xbd, 0x4b, 0x53, 0x15, 0x9b, 0x72, 0xc4,
	0x9a, 0x87, 0xf0, 0x35, 0x74, 0x72, 0x51, 0x22, 0x17, 0x04, 0x55, 0x7b, 0xb7, 0x98, 0xa5, 0xe5,
	0x89, 0x33, 0xfe, 0x1e, 0x7a, 0x52, 0x47, 0x13, 0x27, 0x10, 0x1a, 0x4d, 0xe9, 0x2f, 0xa0, 0x16,
	0x69, 0xb3, 0x4c, 0x2c, 0x31, 0x1b, 0x47, 0xcd, 0x26, 0x69, 0x49, 0x6a, 0xe2, 0xaf, 0xe0, 0x33,
	0x9d, 0x48, 0x7c, 0xd1, 0x80, 0xba, 0x9b, 0xd8, 0x8a, 0x27, 0x35, 0xf1, 0x23, 0xf4, 0x7f, 0x76,
	0x82, 0x80, 0xc4, 0x2f, 0x4e, 0x40, 0x7d, 0x27, 0x3e, 0x7c, 0xf9, 0x0a, 0x9a, 0xf2, 0xb5, 0x93,
	0x92, 0x49, 0x82, 0x32, 0xe0, 0x5f, 0xbe, 0xdf, 0x87, 0x5e, 0x91, 0x50, 0x3c, 0x77, 0xfa, 0xac,
	0xe7, 0xf6, 0xdd, 0xff, 0x31, 0xeb, 0x67, 0x6d, 0xd6, 0x92, 0xf4, 0xbf, 0xcf, 0xda, 0x80, 0xfa,
	0x54, 0xd4, 0xb3, 0x98, 0xa5, 0x25, 0x28, 0xf3, 0xe6, 0xef, 0x2a, 0xb4, 0xe4, 0x39, 0x92, 0x9d,
	0x44, 0x3f, 0x40, 0xb7, 0xf8, 0x86, 0xa3, 0x2f, 0x84, 0xae, 0xcf, 0x3c, 0xfa, 0xe6, 0xe5, 0xe9,
	0x4b, 0x91, 0xdb, 0xbd, 0x1a, 0x8f, 0xf6, 0x7c, 0x5f, 0x09, 0xff, 0x73, 0xbf, 0x06, 0xa6, 0x79,
	0xe6, 0x56, 0xd0, 0xcd, 0xa0, 0xa3, 0x6f, 0x22, 0xba, 0xd4, 0x17, 0x2e, 0xf7, 0x84, 0x98, 0x83,
	0x53, 0x57, 0x8a, 0x45, 0xdf, 0x99, 0x84, 0xe5, 0xe4, 0x72, 0x26, 0x2c, 0xa7, 0x56, 0xec, 0x1b,
	0x68, 0x1e, 0x84, 0x8e, 0x3e, 0x17, 0x5e, 0xc5, 0x6d, 0x31, 0x51, 0x01, 0x15, 0x61, 0xdf, 0x41,
	0x3b, 0x2f, 0x58, 0x34, 0x38, 0x94, 0xab, 0xef, 0x82, 0xd9, 0x3f, 0xbe, 0x50, 0xc9, 0xeb, 0x82,
	0x4b, 0x92, 0x3f, 0xa9, 0xea, 0x24, 0xf9, 0x13, 0xfa, 0x2c, 0xb4, 0x60, 0x6e, 0xdf, 0x1d, 0xb5,
	0x20, 0xd3, 0xec, 0x51, 0x0b, 0x52, 0xe5, 0xb9, 0x35, 0xf9, 0x9f, 0xe0, 0xfd, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xeb, 0xdd, 0xa0, 0xd7, 0x29, 0x08, 0x00, 0x00,
}
