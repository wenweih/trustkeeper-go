syntax = "proto3";

package pb;



//The ChainsQuery service definition.
service ChainsQuery {
 rpc BitcoincoreBlock  (BitcoincoreBlockRequest ) returns (BitcoincoreBlockReply );
 rpc QueryOmniProperty (QueryOmniPropertyRequest) returns (QueryOmniPropertyReply);
 rpc ERC20TokenInfo    (ERC20TokenInfoRequest   ) returns (ERC20TokenInfoReply   );
 rpc ConstructTxBTC    (ConstructTxBTCRequest   ) returns (ConstructTxBTCReply   );
 rpc SendBTCTx         (SendBTCTxRequest        ) returns (SendBTCTxReply        );
 rpc QueryBalance      (QueryBalanceRequest     ) returns (QueryBalanceReply     );
 rpc WalletValidate    (WalletValidateRequest   ) returns (WalletValidateReply   );
 rpc ConstructTxETH    (ConstructTxETHRequest   ) returns (ConstructTxETHReply   );
 rpc SendETHTx         (SendETHTxRequest        ) returns (SendETHTxReply        );
 rpc ConstructTxERC20  (ConstructTxERC20Request ) returns (ConstructTxERC20Reply );
}

message BitcoincoreBlockRequest {}

message BitcoincoreBlockReply {}

message QueryOmniPropertyRequest {
 int64 propertyid = 1;
}

message OmniProperty {
 int64  Propertyid      =  1;
 string Name            =  2;
 string Category        =  3;
 string Subcategory     =  4;
 string URL             =  5;
 bool   Divisible       =  6;
 string Issuer          =  7;
 string Creationtxid    =  8;
 bool   Fixedissuance   =  9;
 bool   Managedissuance = 10;
 bool   Freezingenabled = 11;
 string Totaltokens     = 12;
}

message QueryOmniPropertyReply {
 OmniProperty OmniProperty = 1;
}

message ERC20TokenInfoRequest {
 string TokenHex = 1;
}

message ERC20Token {
 string Symbol   = 1;
 string Name     = 2;
 uint64 Decimals = 3;
 string Address  = 4;
}

message ERC20TokenInfoReply {
 ERC20Token ERC20Token = 1;
}

message ConstructTxBTCRequest {
 string From   = 1;
 string To     = 2;
 string Amount = 3;
}

message ConstructTxBTCReply {
 string UnsignedTxHex = 1;
 int64  VinAmount     = 2;
}

message SendBTCTxRequest {
 string SignedTxHex = 1;
}

message SendBTCTxReply {
 string TxID = 1;
}

message QueryBalanceRequest {
 string symbol  = 1;
 string address = 2;
}

message QueryBalanceReply {
 string balance = 1;
}

message WalletValidateRequest {
 string chainName = 1;
 string address   = 2;
}

message WalletValidateReply {}

message ConstructTxETHRequest {
 string From   = 1;
 string To     = 2;
 string Amount = 3;
}

message ConstructTxETHReply {
 string UnsignedTxHex = 1;
 string ChainID       = 2;
}

message SendETHTxRequest {
 string SignedTxHex = 1;
}

message SendETHTxReply {
 string TxID = 1;
}

// ConstructTxERC20(ctx context.Context, from, to, amount, contract string) (unsignedTxHex, chainID string, err error)
message ConstructTxERC20Request {
  string From   = 1;
  string To     = 2;
  string Amount = 3;
  string Contract = 4;
}

message ConstructTxERC20Reply {
  string UnsignedTxHex = 1;
  string ChainID       = 2;
}
