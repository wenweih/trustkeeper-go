// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction/pkg/grpc/pb/transaction.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AssignAssetsToWalletRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignAssetsToWalletRequest) Reset()         { *m = AssignAssetsToWalletRequest{} }
func (m *AssignAssetsToWalletRequest) String() string { return proto.CompactTextString(m) }
func (*AssignAssetsToWalletRequest) ProtoMessage()    {}
func (*AssignAssetsToWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_a28be41ed3e61d1c, []int{0}
}
func (m *AssignAssetsToWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignAssetsToWalletRequest.Unmarshal(m, b)
}
func (m *AssignAssetsToWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignAssetsToWalletRequest.Marshal(b, m, deterministic)
}
func (dst *AssignAssetsToWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignAssetsToWalletRequest.Merge(dst, src)
}
func (m *AssignAssetsToWalletRequest) XXX_Size() int {
	return xxx_messageInfo_AssignAssetsToWalletRequest.Size(m)
}
func (m *AssignAssetsToWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignAssetsToWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignAssetsToWalletRequest proto.InternalMessageInfo

type AssignAssetsToWalletReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignAssetsToWalletReply) Reset()         { *m = AssignAssetsToWalletReply{} }
func (m *AssignAssetsToWalletReply) String() string { return proto.CompactTextString(m) }
func (*AssignAssetsToWalletReply) ProtoMessage()    {}
func (*AssignAssetsToWalletReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_a28be41ed3e61d1c, []int{1}
}
func (m *AssignAssetsToWalletReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignAssetsToWalletReply.Unmarshal(m, b)
}
func (m *AssignAssetsToWalletReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignAssetsToWalletReply.Marshal(b, m, deterministic)
}
func (dst *AssignAssetsToWalletReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignAssetsToWalletReply.Merge(dst, src)
}
func (m *AssignAssetsToWalletReply) XXX_Size() int {
	return xxx_messageInfo_AssignAssetsToWalletReply.Size(m)
}
func (m *AssignAssetsToWalletReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignAssetsToWalletReply.DiscardUnknown(m)
}

var xxx_messageInfo_AssignAssetsToWalletReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AssignAssetsToWalletRequest)(nil), "pb.AssignAssetsToWalletRequest")
	proto.RegisterType((*AssignAssetsToWalletReply)(nil), "pb.AssignAssetsToWalletReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionClient is the client API for Transaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionClient interface {
	AssignAssetsToWallet(ctx context.Context, in *AssignAssetsToWalletRequest, opts ...grpc.CallOption) (*AssignAssetsToWalletReply, error)
}

type transactionClient struct {
	cc *grpc.ClientConn
}

func NewTransactionClient(cc *grpc.ClientConn) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) AssignAssetsToWallet(ctx context.Context, in *AssignAssetsToWalletRequest, opts ...grpc.CallOption) (*AssignAssetsToWalletReply, error) {
	out := new(AssignAssetsToWalletReply)
	err := c.cc.Invoke(ctx, "/pb.Transaction/AssignAssetsToWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServer is the server API for Transaction service.
type TransactionServer interface {
	AssignAssetsToWallet(context.Context, *AssignAssetsToWalletRequest) (*AssignAssetsToWalletReply, error)
}

func RegisterTransactionServer(s *grpc.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_AssignAssetsToWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignAssetsToWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).AssignAssetsToWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Transaction/AssignAssetsToWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).AssignAssetsToWallet(ctx, req.(*AssignAssetsToWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssignAssetsToWallet",
			Handler:    _Transaction_AssignAssetsToWallet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction/pkg/grpc/pb/transaction.proto",
}

func init() {
	proto.RegisterFile("transaction/pkg/grpc/pb/transaction.proto", fileDescriptor_transaction_a28be41ed3e61d1c)
}

var fileDescriptor_transaction_a28be41ed3e61d1c = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2c, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0xc8, 0x4e, 0xd7, 0x4f, 0x2f, 0x2a, 0x48,
	0xd6, 0x2f, 0x48, 0xd2, 0x47, 0x12, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48,
	0x52, 0x92, 0xe5, 0x92, 0x76, 0x2c, 0x2e, 0xce, 0x4c, 0xcf, 0x73, 0x2c, 0x2e, 0x4e, 0x2d, 0x29,
	0x0e, 0xc9, 0x0f, 0x4f, 0xcc, 0xc9, 0x49, 0x2d, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51,
	0x92, 0xe6, 0x92, 0xc4, 0x2e, 0x5d, 0x90, 0x53, 0x69, 0x94, 0xca, 0xc5, 0x1d, 0x82, 0x30, 0x54,
	0x28, 0x8c, 0x4b, 0x04, 0x9b, 0x5a, 0x21, 0x79, 0xbd, 0x82, 0x24, 0x3d, 0x3c, 0x96, 0x48, 0xc9,
	0xe2, 0x56, 0x50, 0x90, 0x53, 0x99, 0xc4, 0x06, 0x76, 0xad, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x7d, 0x76, 0xc3, 0x2f, 0xda, 0x00, 0x00, 0x00,
}
