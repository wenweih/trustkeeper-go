// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dashboard.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetGroupsRequest struct {
	NamespaceID          string   `protobuf:"bytes,1,opt,name=namespaceID" json:"namespaceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupsRequest) Reset()         { *m = GetGroupsRequest{} }
func (m *GetGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GetGroupsRequest) ProtoMessage()    {}
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dashboard_41603ad4e2eee9ea, []int{0}
}
func (m *GetGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupsRequest.Unmarshal(m, b)
}
func (m *GetGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupsRequest.Marshal(b, m, deterministic)
}
func (dst *GetGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupsRequest.Merge(dst, src)
}
func (m *GetGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_GetGroupsRequest.Size(m)
}
func (m *GetGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupsRequest proto.InternalMessageInfo

func (m *GetGroupsRequest) GetNamespaceID() string {
	if m != nil {
		return m.NamespaceID
	}
	return ""
}

type GetGroupsReply struct {
	Groups               []*Group `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupsReply) Reset()         { *m = GetGroupsReply{} }
func (m *GetGroupsReply) String() string { return proto.CompactTextString(m) }
func (*GetGroupsReply) ProtoMessage()    {}
func (*GetGroupsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_dashboard_41603ad4e2eee9ea, []int{1}
}
func (m *GetGroupsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupsReply.Unmarshal(m, b)
}
func (m *GetGroupsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupsReply.Marshal(b, m, deterministic)
}
func (dst *GetGroupsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupsReply.Merge(dst, src)
}
func (m *GetGroupsReply) XXX_Size() int {
	return xxx_messageInfo_GetGroupsReply.Size(m)
}
func (m *GetGroupsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupsReply proto.InternalMessageInfo

func (m *GetGroupsReply) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Group struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_dashboard_41603ad4e2eee9ea, []int{2}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateGroupRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	NamespaceID          string   `protobuf:"bytes,4,opt,name=namespaceID" json:"namespaceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGroupRequest) Reset()         { *m = CreateGroupRequest{} }
func (m *CreateGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGroupRequest) ProtoMessage()    {}
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dashboard_41603ad4e2eee9ea, []int{3}
}
func (m *CreateGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupRequest.Unmarshal(m, b)
}
func (m *CreateGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupRequest.Marshal(b, m, deterministic)
}
func (dst *CreateGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupRequest.Merge(dst, src)
}
func (m *CreateGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CreateGroupRequest.Size(m)
}
func (m *CreateGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupRequest proto.InternalMessageInfo

func (m *CreateGroupRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CreateGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateGroupRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreateGroupRequest) GetNamespaceID() string {
	if m != nil {
		return m.NamespaceID
	}
	return ""
}

type CreateGroupReply struct {
	Group                *Group   `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGroupReply) Reset()         { *m = CreateGroupReply{} }
func (m *CreateGroupReply) String() string { return proto.CompactTextString(m) }
func (*CreateGroupReply) ProtoMessage()    {}
func (*CreateGroupReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_dashboard_41603ad4e2eee9ea, []int{4}
}
func (m *CreateGroupReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupReply.Unmarshal(m, b)
}
func (m *CreateGroupReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupReply.Marshal(b, m, deterministic)
}
func (dst *CreateGroupReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupReply.Merge(dst, src)
}
func (m *CreateGroupReply) XXX_Size() int {
	return xxx_messageInfo_CreateGroupReply.Size(m)
}
func (m *CreateGroupReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupReply proto.InternalMessageInfo

func (m *CreateGroupReply) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func init() {
	proto.RegisterType((*GetGroupsRequest)(nil), "pb.GetGroupsRequest")
	proto.RegisterType((*GetGroupsReply)(nil), "pb.GetGroupsReply")
	proto.RegisterType((*Group)(nil), "pb.Group")
	proto.RegisterType((*CreateGroupRequest)(nil), "pb.CreateGroupRequest")
	proto.RegisterType((*CreateGroupReply)(nil), "pb.CreateGroupReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DashboardClient is the client API for Dashboard service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DashboardClient interface {
	GetGroups(ctx context.Context, in *GetGroupsRequest, opts ...grpc.CallOption) (*GetGroupsReply, error)
	CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*CreateGroupReply, error)
}

type dashboardClient struct {
	cc *grpc.ClientConn
}

func NewDashboardClient(cc *grpc.ClientConn) DashboardClient {
	return &dashboardClient{cc}
}

func (c *dashboardClient) GetGroups(ctx context.Context, in *GetGroupsRequest, opts ...grpc.CallOption) (*GetGroupsReply, error) {
	out := new(GetGroupsReply)
	err := c.cc.Invoke(ctx, "/pb.Dashboard/GetGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardClient) CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*CreateGroupReply, error) {
	out := new(CreateGroupReply)
	err := c.cc.Invoke(ctx, "/pb.Dashboard/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DashboardServer is the server API for Dashboard service.
type DashboardServer interface {
	GetGroups(context.Context, *GetGroupsRequest) (*GetGroupsReply, error)
	CreateGroup(context.Context, *CreateGroupRequest) (*CreateGroupReply, error)
}

func RegisterDashboardServer(s *grpc.Server, srv DashboardServer) {
	s.RegisterService(&_Dashboard_serviceDesc, srv)
}

func _Dashboard_GetGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServer).GetGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dashboard/GetGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServer).GetGroups(ctx, req.(*GetGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dashboard_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dashboard/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServer).CreateGroup(ctx, req.(*CreateGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dashboard_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Dashboard",
	HandlerType: (*DashboardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGroups",
			Handler:    _Dashboard_GetGroups_Handler,
		},
		{
			MethodName: "CreateGroup",
			Handler:    _Dashboard_CreateGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dashboard.proto",
}

func init() { proto.RegisterFile("dashboard.proto", fileDescriptor_dashboard_41603ad4e2eee9ea) }

var fileDescriptor_dashboard_41603ad4e2eee9ea = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xb1, 0x6e, 0xc2, 0x30,
	0x10, 0x86, 0x15, 0x27, 0x20, 0xe5, 0x22, 0x51, 0x74, 0x42, 0x55, 0xc4, 0xd2, 0x34, 0x13, 0x53,
	0x06, 0x68, 0xa7, 0x0e, 0x1d, 0x8a, 0x84, 0xba, 0xe6, 0x0d, 0x1c, 0x7c, 0x6a, 0x23, 0xd1, 0xc6,
	0xb5, 0x93, 0x81, 0xa9, 0xaf, 0x8e, 0x7c, 0x09, 0xc8, 0x04, 0xb6, 0xcb, 0x97, 0xf3, 0x7d, 0xfe,
	0xcf, 0xf0, 0xa0, 0xa4, 0xfd, 0xae, 0x1a, 0x69, 0x54, 0xa1, 0x4d, 0xd3, 0x36, 0x28, 0x74, 0x95,
	0xbf, 0xc0, 0x7c, 0x47, 0xed, 0xce, 0x34, 0x9d, 0xb6, 0x25, 0xfd, 0x75, 0x64, 0x5b, 0xcc, 0x20,
	0xf9, 0x95, 0x3f, 0x64, 0xb5, 0xdc, 0xd3, 0xe7, 0x36, 0x0d, 0xb2, 0x60, 0x15, 0x97, 0x3e, 0xca,
	0x37, 0x30, 0xf3, 0x4e, 0xe9, 0xc3, 0x11, 0x9f, 0x61, 0xfa, 0xc5, 0x9f, 0x69, 0x90, 0x85, 0xab,
	0x64, 0x1d, 0x17, 0xba, 0x2a, 0xb8, 0xa1, 0x1c, 0x7e, 0xe4, 0xef, 0x30, 0x61, 0x80, 0x08, 0x91,
	0x1b, 0x36, 0x0c, 0xe6, 0xda, 0x31, 0x45, 0x76, 0x9f, 0x8a, 0x9e, 0xb9, 0x1a, 0x67, 0x20, 0x6a,
	0x95, 0x86, 0x4c, 0x44, 0xad, 0x72, 0x03, 0xf8, 0x61, 0x48, 0xb6, 0xd4, 0xcf, 0x1d, 0x6e, 0x8b,
	0x10, 0x75, 0x5d, 0xad, 0xce, 0xd3, 0x5c, 0x7d, 0x31, 0x88, 0x3b, 0x86, 0xd0, 0x33, 0x8c, 0x92,
	0x46, 0xf7, 0x92, 0xce, 0xaf, 0x9c, 0x2e, 0xeb, 0x13, 0x4c, 0x38, 0x12, 0x2b, 0xaf, 0xa2, 0xf6,
	0x7c, 0xfd, 0x0f, 0xf1, 0xf6, 0xbc, 0x6b, 0x7c, 0x85, 0xf8, 0xb2, 0x2b, 0x5c, 0x70, 0xef, 0x68,
	0xe1, 0x4b, 0x1c, 0x51, 0x27, 0x79, 0x83, 0xc4, 0x13, 0xe3, 0xa3, 0x6b, 0xb9, 0x4d, 0xbf, 0x5c,
	0xdc, 0x70, 0x7d, 0x38, 0x56, 0x53, 0x7e, 0xe0, 0xcd, 0x29, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x55,
	0x90, 0x13, 0xf3, 0x01, 0x00, 0x00,
}
